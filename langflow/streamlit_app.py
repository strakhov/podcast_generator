import os
import time
import uuid
import requests
import streamlit as st
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# URL –≤–∞—à–µ–≥–æ Langflow-—Å–µ—Ä–≤–∏—Å–∞
BACKEND_URL = st.text_input(
    "Backend URL",
    value=os.getenv("BACKEND_URL", "http://langflow:7860")
)

# –ü–∞–ø–∫–∞, —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞–∫ –æ–±—â–∏–π volume –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
OUTPUT_DIR = Path(os.getenv("SHARED_OUTPUT", "./output"))

st.title("üéôÔ∏è Podcast Generator")

# --- –ò—Å—Ç–æ—á–Ω–∏–∫ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
# uploaded_file = st.file_uploader("1) –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV (–∫–æ–ª–æ–Ω–∫–∞ 'words')", type="csv")
input_text    = st.text_area("2) –í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–∞–±–æ—Ä —Å–ª–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤—å—é –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ", height=200)

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ---
length_minutes = st.slider(
    "–ñ–µ–ª–∞–µ–º–∞—è –¥–ª–∏–Ω–∞ –ø–æ–¥–∫–∞—Å—Ç–∞ (–º–∏–Ω—É—Ç—ã)",
    min_value=1, max_value=60, value=5
)

st.markdown("---")

# –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞
if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ–¥–∫–∞—Å—Ç–∞"):
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤–≤–æ–¥
    if not input_text.strip():
        st.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç")
        st.stop()

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏
    uid = uuid.uuid4().hex[:8]
    st.write(f"UID –∑–∞–¥–∞—á–∏: `{uid}`")

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º payload
    files = None
    data  = {
        "uid": uid,
        "length": length_minutes
    }

    # if uploaded_file:
    #     # –ß–∏—Ç–∞–µ–º CSV –ø—Ä—è–º–æ –≤ –ø–∞–º—è—Ç—å –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
    #     import pandas as pd
    #     df = pd.read_csv(uploaded_file)
    #     words_list = df['words'].dropna().astype(str).tolist()
    #     data["words"] = words_list
    # elif input_text.strip():
    data["text"] = input_text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook-–∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ–π–µ—Ä–∞ "http://localhost:7860/api/v1/webhook/4a71aea8-dbc8-4118-8bb3-829960a56edb"
    
    try:
        resp = requests.post(
            f"{BACKEND_URL}/api/v1/webhook/4a71aea8-dbc8-4118-8bb3-829960a56edb",
            json=data,
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        resp.raise_for_status()
    except Exception as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É: {e}")
        st.stop()

    st.success("–ó–∞–¥–∞—á–∞ –ø—Ä–∏–Ω—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É, –æ–∂–∏–¥–∞–π—Ç–µ...")

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progress = st.progress(0)
    status_text = st.empty()

    # target_file = OUTPUT_DIR / f"podcast_{uid}.mp3"
    target_file = Path("/app/shared/output") / f"podcast_{uid}.mp3"
    total_wait = length_minutes * 60 * 5  # –º–∞–∫—Å–∏–º—É–º –∂–¥–µ–º —Å—Ç–æ–ª—å–∫–æ –∂–µ —Å–µ–∫—É–Ω–¥, —Å–∫–æ–ª—å–∫–æ –¥–ª–∏–Ω–∞ —Ö5
    elapsed = 0

    # –û–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ–∞–π–ª –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    while elapsed < total_wait:
        if target_file.exists():
            progress.progress(100)
            status_text.success("–ì–æ—Ç–æ–≤–æ! –í–∞—à –ø–æ–¥–∫–∞—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.")
            break

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫ max
        pct = int((elapsed / total_wait) * 100)
        progress.progress(pct)
        status_text.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è... –∂–¥—ë–º —Ñ–∞–π–ª (elapsed={elapsed}s)")
        time.sleep(1)
        elapsed += 1
    else:
        status_text.error("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.")
        st.stop()

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–∫–∞—á–∞—Ç—å
    with open(target_file, "rb") as f:
        audio_bytes = f.read()

    st.audio(audio_bytes, format="audio/mp3")
    st.download_button(
        "‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å –ø–æ–¥–∫–∞—Å—Ç",
        data=audio_bytes,
        file_name=f"podcast_{uid}.mp3",
        mime="audio/mp3"
    )